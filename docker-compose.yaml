version: '3.7'

services:
  s3:
    container_name: s3
    user: root
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${S3_USER}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD}
      MINIO_ACCESS_KEY: minio_admin
      MINIO_SECRET_KEY: minio_password
    volumes:
      - ./s3:/data
    networks:
      - nifi_test

  postgres:
    image: docker.io/postgres:14-alpine
    restart: unless-stopped
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./initial_tables.sql:/docker-entrypoint-initdb.d/initial_tables.sql
    networks:
      - nifi_test

  zookeeper:
    hostname: myzookeeper
    user: root
    container_name: zookeeper
    image: 'bitnami/zookeeper:3.7.0'
    restart: on-failure
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - nifi_test

  registry:
    hostname: myregistry
    user: root
    container_name: registry
    image: 'apache/nifi-registry:1.15.0'
    restart: on-failure
    ports:
      - "18080:18080"
    environment:
      - LOG_LEVEL=INFO
      - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
      - NIFI_REGISTRY_FLOW_PROVIDER=file
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
    volumes:
      - ./nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
      - ./nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
    networks:
      - nifi_test

  nifi:
    hostname: mynifi
    user: root
    container_name: nifi
    image: 'apache/nifi:latest'
    restart: on-failure
    ports:
      - '8091:8080'
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=myzookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=30 sec
      - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
    networks:
      - nifi_test
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8091/nifi/}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 5
    volumes:
      - ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
      - ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
      - ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ./nifi/state:/opt/nifi/nifi-current/state
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./nifi/conf:/opt/nifi/nifi-current/conf
      - ./nifi/jdbc:/opt/nifi/nifi-current/jdbc
      - ./nifi/credentials:/opt/nifi/nifi-current/credentials

volumes:
  postgres:


networks:
  nifi_test:
    driver: bridge
